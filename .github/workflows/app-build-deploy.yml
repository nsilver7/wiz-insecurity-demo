name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write  # Required for OIDC authentication
  contents: read

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: app-container-repo
  CLUSTER_NAME: eks-cluster
  IMAGE_TAG: latest

jobs:
  build-and-push:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::586794482281:role/github-actions-role
        role-session-name: github-actions
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 586794482281.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build Docker Image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG 586794482281.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Push Docker Image to Amazon ECR
      run: |
        docker push 586794482281.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::586794482281:role/github-actions-role
        role-session-name: github-actions
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

    - name: Set New Image in Deployment Manifest
      run: |
        sed -i "s|586794482281.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:.*|586794482281.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s-manifests/deployment.yaml

    - name: Apply Kubernetes Manifests
      run: |
        kubectl apply -f k8s-manifests/deployment.yaml
        kubectl apply -f k8s-manifests/service.yaml
        kubectl rollout status deployment/python-web-app